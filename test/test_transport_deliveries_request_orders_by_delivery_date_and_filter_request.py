# coding: utf-8

"""
    iikoCloud API

    <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iikocloud_client.models.transport_deliveries_request_orders_by_delivery_date_and_filter_request import TransportDeliveriesRequestOrdersByDeliveryDateAndFilterRequest

class TestTransportDeliveriesRequestOrdersByDeliveryDateAndFilterRequest(unittest.TestCase):
    """TransportDeliveriesRequestOrdersByDeliveryDateAndFilterRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransportDeliveriesRequestOrdersByDeliveryDateAndFilterRequest:
        """Test TransportDeliveriesRequestOrdersByDeliveryDateAndFilterRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransportDeliveriesRequestOrdersByDeliveryDateAndFilterRequest`
        """
        model = TransportDeliveriesRequestOrdersByDeliveryDateAndFilterRequest()
        if include_optional:
            return TransportDeliveriesRequestOrdersByDeliveryDateAndFilterRequest(
                organization_ids = [
                    ''
                    ],
                terminal_group_ids = [
                    ''
                    ],
                delivery_date_from = '2019-08-24 14:15:22.123',
                delivery_date_to = '2019-08-24 14:15:22.123',
                statuses = [
                    'Unconfirmed'
                    ],
                has_problem = True,
                order_service_type = 'DeliveryByCourier',
                search_text = '',
                time_to_cooking_error_timeout = 56,
                cooking_timeout = 56,
                sort_property = 'Number',
                sort_direction = 'Ascending',
                rows_count = 56,
                source_keys = [
                    ''
                    ],
                order_ids = [
                    ''
                    ],
                pos_order_ids = [
                    ''
                    ]
            )
        else:
            return TransportDeliveriesRequestOrdersByDeliveryDateAndFilterRequest(
                organization_ids = [
                    ''
                    ],
        )
        """

    def testTransportDeliveriesRequestOrdersByDeliveryDateAndFilterRequest(self):
        """Test TransportDeliveriesRequestOrdersByDeliveryDateAndFilterRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
