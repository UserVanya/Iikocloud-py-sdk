# coding: utf-8

"""
    iikoCloud API

    <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iiko_cloud_client.models.transport_delivery_restrictions_get_delivery_restrictions_response import TransportDeliveryRestrictionsGetDeliveryRestrictionsResponse

class TestTransportDeliveryRestrictionsGetDeliveryRestrictionsResponse(unittest.TestCase):
    """TransportDeliveryRestrictionsGetDeliveryRestrictionsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransportDeliveryRestrictionsGetDeliveryRestrictionsResponse:
        """Test TransportDeliveryRestrictionsGetDeliveryRestrictionsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransportDeliveryRestrictionsGetDeliveryRestrictionsResponse`
        """
        model = TransportDeliveryRestrictionsGetDeliveryRestrictionsResponse()
        if include_optional:
            return TransportDeliveryRestrictionsGetDeliveryRestrictionsResponse(
                correlation_id = '',
                delivery_restrictions = [
                    iiko_cloud_client.models.delivery_restrictions_delivery_restrictions_schema.DeliveryRestrictionsDeliveryRestrictionsSchema(
                        organization_id = '', 
                        delivery_geocode_service_type = null, 
                        delivery_regions_map_url = '', 
                        default_delivery_duration_in_minutes = 56, 
                        default_self_service_duration_in_minutes = 56, 
                        use_same_delivery_duration = True, 
                        use_same_min_sum = True, 
                        default_min_sum = 1.337, 
                        use_same_work_time_interval = True, 
                        default_from = 56, 
                        default_to = 56, 
                        use_same_restrictions_on_all_week = True, 
                        restrictions = [
                            iiko_cloud_client.models.delivery_restrictions_delivery_restriction_item_schema.DeliveryRestrictionsDeliveryRestrictionItemSchema(
                                min_sum = 1.337, 
                                terminal_group_id = '', 
                                organization_id = '', 
                                zone = '', 
                                week_map = 56, 
                                from = 56, 
                                to = 56, 
                                priority = 56, 
                                delivery_duration_in_minutes = 56, 
                                delivery_service_product_id = '', )
                            ], 
                        delivery_zones = [
                            iiko_cloud_client.models.delivery_restrictions_delivery_zone_schema.DeliveryRestrictionsDeliveryZoneSchema(
                                name = '', 
                                coordinates = [
                                    iiko_cloud_client.models.delivery_restrictions_coordinates_schema.DeliveryRestrictionsCoordinatesSchema(
                                        latitude = 1.337, 
                                        longitude = 1.337, )
                                    ], 
                                addresses = [
                                    iiko_cloud_client.models.delivery_restrictions_delivery_zone_address_binding_schema.DeliveryRestrictionsDeliveryZoneAddressBindingSchema(
                                        street_id = '', 
                                        postcode = '', 
                                        houses = null, )
                                    ], )
                            ], 
                        reject_on_geocoding_error = True, 
                        add_delivery_service_cost = True, 
                        use_same_delivery_service_product = True, 
                        default_delivery_service_product_id = '', 
                        use_external_assignation_service = True, 
                        front_trusts_call_center_check = True, 
                        external_assignation_service_url = '', 
                        require_exact_address_for_geocoding = True, 
                        zones_mode = null, 
                        auto_assign_external_deliveries = True, 
                        action_on_validation_rejection = null, )
                    ]
            )
        else:
            return TransportDeliveryRestrictionsGetDeliveryRestrictionsResponse(
                correlation_id = '',
                delivery_restrictions = [
                    iiko_cloud_client.models.delivery_restrictions_delivery_restrictions_schema.DeliveryRestrictionsDeliveryRestrictionsSchema(
                        organization_id = '', 
                        delivery_geocode_service_type = null, 
                        delivery_regions_map_url = '', 
                        default_delivery_duration_in_minutes = 56, 
                        default_self_service_duration_in_minutes = 56, 
                        use_same_delivery_duration = True, 
                        use_same_min_sum = True, 
                        default_min_sum = 1.337, 
                        use_same_work_time_interval = True, 
                        default_from = 56, 
                        default_to = 56, 
                        use_same_restrictions_on_all_week = True, 
                        restrictions = [
                            iiko_cloud_client.models.delivery_restrictions_delivery_restriction_item_schema.DeliveryRestrictionsDeliveryRestrictionItemSchema(
                                min_sum = 1.337, 
                                terminal_group_id = '', 
                                organization_id = '', 
                                zone = '', 
                                week_map = 56, 
                                from = 56, 
                                to = 56, 
                                priority = 56, 
                                delivery_duration_in_minutes = 56, 
                                delivery_service_product_id = '', )
                            ], 
                        delivery_zones = [
                            iiko_cloud_client.models.delivery_restrictions_delivery_zone_schema.DeliveryRestrictionsDeliveryZoneSchema(
                                name = '', 
                                coordinates = [
                                    iiko_cloud_client.models.delivery_restrictions_coordinates_schema.DeliveryRestrictionsCoordinatesSchema(
                                        latitude = 1.337, 
                                        longitude = 1.337, )
                                    ], 
                                addresses = [
                                    iiko_cloud_client.models.delivery_restrictions_delivery_zone_address_binding_schema.DeliveryRestrictionsDeliveryZoneAddressBindingSchema(
                                        street_id = '', 
                                        postcode = '', 
                                        houses = null, )
                                    ], )
                            ], 
                        reject_on_geocoding_error = True, 
                        add_delivery_service_cost = True, 
                        use_same_delivery_service_product = True, 
                        default_delivery_service_product_id = '', 
                        use_external_assignation_service = True, 
                        front_trusts_call_center_check = True, 
                        external_assignation_service_url = '', 
                        require_exact_address_for_geocoding = True, 
                        zones_mode = null, 
                        auto_assign_external_deliveries = True, 
                        action_on_validation_rejection = null, )
                    ],
        )
        """

    def testTransportDeliveryRestrictionsGetDeliveryRestrictionsResponse(self):
        """Test TransportDeliveryRestrictionsGetDeliveryRestrictionsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
