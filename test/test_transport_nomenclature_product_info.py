# coding: utf-8

"""
    iikoCloud API

    <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iiko_cloud_client.models.transport_nomenclature_product_info import TransportNomenclatureProductInfo

class TestTransportNomenclatureProductInfo(unittest.TestCase):
    """TransportNomenclatureProductInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransportNomenclatureProductInfo:
        """Test TransportNomenclatureProductInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransportNomenclatureProductInfo`
        """
        model = TransportNomenclatureProductInfo()
        if include_optional:
            return TransportNomenclatureProductInfo(
                fat_amount = 1.337,
                proteins_amount = 1.337,
                carbohydrates_amount = 1.337,
                energy_amount = 1.337,
                fat_full_amount = 1.337,
                proteins_full_amount = 1.337,
                carbohydrates_full_amount = 1.337,
                energy_full_amount = 1.337,
                weight = 1.337,
                group_id = '',
                product_category_id = '',
                type = '',
                order_item_type = 'Product',
                modifier_schema_id = '',
                modifier_schema_name = '',
                splittable = True,
                measure_unit = '',
                size_prices = [
                    iiko_cloud_client.models.nomenclature_size_price_schema.NomenclatureSizePriceSchema(
                        size_id = '', 
                        price = null, )
                    ],
                modifiers = [
                    iiko_cloud_client.models.nomenclature_simple_modifier_info_schema.NomenclatureSimpleModifierInfoSchema(
                        id = '', 
                        default_amount = 56, 
                        min_amount = 56, 
                        max_amount = 56, 
                        required = True, 
                        hide_if_default_amount = True, 
                        splittable = True, 
                        free_of_charge_amount = 56, )
                    ],
                group_modifiers = [
                    iiko_cloud_client.models.nomenclature_group_modifier_info_schema.NomenclatureGroupModifierInfoSchema(
                        id = '', 
                        min_amount = 56, 
                        max_amount = 56, 
                        required = True, 
                        child_modifiers_have_min_max_restrictions = True, 
                        child_modifiers = [
                            iiko_cloud_client.models.nomenclature_child_modifier_info_schema.NomenclatureChildModifierInfoSchema(
                                id = '', 
                                default_amount = 56, 
                                min_amount = 56, 
                                max_amount = 56, 
                                required = True, 
                                hide_if_default_amount = True, 
                                splittable = True, 
                                free_of_charge_amount = 56, )
                            ], 
                        hide_if_default_amount = True, 
                        default_amount = 56, 
                        splittable = True, 
                        free_of_charge_amount = 56, )
                    ],
                image_links = [
                    ''
                    ],
                do_not_print_in_cheque = True,
                parent_group = '',
                order = 56,
                full_name_english = '',
                use_balance_for_sell = True,
                can_set_open_price = True,
                payment_subject = '',
                id = '',
                code = '',
                name = '',
                description = '',
                additional_info = '',
                tags = [
                    ''
                    ],
                is_deleted = True,
                seo_description = '',
                seo_text = '',
                seo_keywords = '',
                seo_title = ''
            )
        else:
            return TransportNomenclatureProductInfo(
                splittable = True,
                use_balance_for_sell = True,
                can_set_open_price = True,
                id = '',
                name = '',
        )
        """

    def testTransportNomenclatureProductInfo(self):
        """Test TransportNomenclatureProductInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
