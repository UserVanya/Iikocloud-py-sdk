# coding: utf-8

"""
    iikoCloud API

    <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iiko_cloud_client.models.transport_organizations_extended_organization_info import TransportOrganizationsExtendedOrganizationInfo

class TestTransportOrganizationsExtendedOrganizationInfo(unittest.TestCase):
    """TransportOrganizationsExtendedOrganizationInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransportOrganizationsExtendedOrganizationInfo:
        """Test TransportOrganizationsExtendedOrganizationInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransportOrganizationsExtendedOrganizationInfo`
        """
        model = TransportOrganizationsExtendedOrganizationInfo()
        if include_optional:
            return TransportOrganizationsExtendedOrganizationInfo(
                country = '',
                restaurant_address = '',
                latitude = 1.337,
                longitude = 1.337,
                use_uae_addressing_system = True,
                version = '',
                currency_iso_name = '',
                currency_minimum_denomination = 1.337,
                country_phone_code = '',
                marketing_source_required_in_delivery = True,
                default_delivery_city_id = '',
                delivery_city_ids = [
                    ''
                    ],
                delivery_service_type = 'CourierOnly',
                delivery_order_payment_settings = 'WhenOrderOnTheWay',
                default_call_center_payment_type_id = '',
                order_item_comment_enabled = True,
                inn = '',
                address_format_type = 'Legacy',
                is_confirmation_enabled = True,
                confirm_allowed_interval_in_minutes = 56,
                is_cloud = True,
                is_anonymous_guests_allowed = True,
                address_lookup = [
                    'DaData'
                    ]
            )
        else:
            return TransportOrganizationsExtendedOrganizationInfo(
                country = '',
                restaurant_address = '',
                latitude = 1.337,
                longitude = 1.337,
                use_uae_addressing_system = True,
                version = '',
                currency_iso_name = '',
                currency_minimum_denomination = 1.337,
                country_phone_code = '',
                marketing_source_required_in_delivery = True,
                default_delivery_city_id = '',
                delivery_city_ids = [
                    ''
                    ],
                delivery_service_type = 'CourierOnly',
                default_call_center_payment_type_id = '',
                order_item_comment_enabled = True,
                inn = '',
                address_format_type = 'Legacy',
                is_confirmation_enabled = True,
                confirm_allowed_interval_in_minutes = 56,
                is_cloud = True,
                address_lookup = [
                    'DaData'
                    ],
        )
        """

    def testTransportOrganizationsExtendedOrganizationInfo(self):
        """Test TransportOrganizationsExtendedOrganizationInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
