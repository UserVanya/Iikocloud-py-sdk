# coding: utf-8

"""
    iikoCloud API

    <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iikocloud_client.models.transport_modifier_group_dto import TransportModifierGroupDto

class TestTransportModifierGroupDto(unittest.TestCase):
    """TransportModifierGroupDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TransportModifierGroupDto:
        """Test TransportModifierGroupDto
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TransportModifierGroupDto`
        """
        model = TransportModifierGroupDto()
        if include_optional:
            return TransportModifierGroupDto(
                items = [
                    iikocloud_client.models.transport_modifier_item_dto_schema.TransportModifierItemDtoSchema(
                        prices = [
                            iikocloud_client.models.transport_price_dto_schema.TransportPriceDtoSchema(
                                organization_id = '', 
                                price = 20.5, )
                            ], 
                        sku = '', 
                        name = '', 
                        description = '', 
                        button_image = '', 
                        restrictions = iikocloud_client.models.modifier_restrictions_dto_schema.ModifierRestrictionsDtoSchema(
                            min_quantity = 56, 
                            max_quantity = 56, 
                            free_quantity = 56, 
                            by_default = 56, ), 
                        allergen_groups = [
                            iikocloud_client.models.allergen_group_dto_schema.AllergenGroupDtoSchema(
                                id = '', 
                                code = '', 
                                name = '', )
                            ], 
                        nutrition_per_hundred_grams = iikocloud_client.models.nutrition_info_dto_schema.NutritionInfoDtoSchema(), 
                        portion_weight_grams = 0, 
                        tags = [
                            iikocloud_client.models.tag_dto_schema.TagDtoSchema(
                                id = '', 
                                name = '', )
                            ], 
                        item_id = '', )
                    ],
                name = '',
                description = '',
                restrictions = iikocloud_client.models.modifier_restrictions_dto_schema.ModifierRestrictionsDtoSchema(
                    min_quantity = 56, 
                    max_quantity = 56, 
                    free_quantity = 56, 
                    by_default = 56, ),
                can_be_divided = True,
                item_group_id = '',
                child_modifiers_have_min_max_restrictions = True,
                sku = ''
            )
        else:
            return TransportModifierGroupDto(
        )
        """

    def testTransportModifierGroupDto(self):
        """Test TransportModifierGroupDto"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
