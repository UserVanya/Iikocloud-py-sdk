# coding: utf-8

"""
    iikoCloud API

    <h3>Description of common data formats:</h3><b>uuid</b> - string in UUID(universally unique identifier).<br/>Examples: <i>550e8400-e29b-41d4-a716-446655440000, b090de0b-8550-6e17-70b2-bbba152bcbd3</i><br/><br/><b>date-time</b> - date and time string in custom string format <b>yyyy-MM-dd HH:mm:ss.fff</b>.<br/>Examples: <i>2017-04-29 20:45:00.000, 2018-01-01 01:01:30.123</i>

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from iiko_cloud_client.models.net_loyalty_result_get_combos_info_response import NetLoyaltyResultGetCombosInfoResponse

class TestNetLoyaltyResultGetCombosInfoResponse(unittest.TestCase):
    """NetLoyaltyResultGetCombosInfoResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> NetLoyaltyResultGetCombosInfoResponse:
        """Test NetLoyaltyResultGetCombosInfoResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `NetLoyaltyResultGetCombosInfoResponse`
        """
        model = NetLoyaltyResultGetCombosInfoResponse()
        if include_optional:
            return NetLoyaltyResultGetCombosInfoResponse(
                combo_specifications = [
                    iiko_cloud_client.models.loyalty_result_combo_specification_schema.LoyaltyResultComboSpecificationSchema(
                        source_action_id = '', 
                        category_id = '', 
                        name = '', 
                        price_modification_type = null, 
                        price_modification = 1.337, 
                        is_active = True, 
                        start_date = '2019-08-24 14:15:22.123', 
                        expiration_date = '2019-08-24 14:15:22.123', 
                        lacking_groups_to_suggest = 56, 
                        include_modifiers = True, 
                        groups = [
                            iiko_cloud_client.models.loyalty_result_combo_group_schema.LoyaltyResultComboGroupSchema(
                                id = '', 
                                name = '', 
                                is_main_group = True, 
                                products = [
                                    iiko_cloud_client.models.loyalty_result_combo_product_schema.LoyaltyResultComboProductSchema(
                                        product_id = '', 
                                        size_name = '', 
                                        size_id = '', 
                                        forbidden_modifiers = [
                                            ''
                                            ], 
                                        price_modification_amount = 1.337, )
                                    ], )
                            ], )
                    ],
                combo_categories = [
                    iiko_cloud_client.models.loyalty_result_combo_category_schema.LoyaltyResultComboCategorySchema(
                        id = '', 
                        name = '', )
                    ],
                warnings = [
                    iiko_cloud_client.models.loyalty_result_warning_info_schema.LoyaltyResultWarningInfoSchema(
                        code = '', 
                        error_code = '', 
                        message = '', )
                    ]
            )
        else:
            return NetLoyaltyResultGetCombosInfoResponse(
        )
        """

    def testNetLoyaltyResultGetCombosInfoResponse(self):
        """Test NetLoyaltyResultGetCombosInfoResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
